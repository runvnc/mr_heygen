{% block content %}
  <div class="main" id="mainContainer" >
    <!-- <div id="debug-overlay2">DEBUG READY</div> -->

    <main class="container">
      <!-- Video Section -->
      <article>
        <div id="loading" class="loading"><div class="loading-spinner"></div></div>
        <video id="animation" src="/imgs/heygenloading.mp4"
               style="display: none;" 
               onerror="this.style.display='none'" 
               muted autoplay playsinline loop></video>
        <video id="avatarVideo" autoplay playsinline></video>
      </article>

      <!-- Controls Section -->
      <section class="load-section">
        <button id="startSession" class="session-toggle">Load Avatar</button>
      </section>
    </main>
    
    <chat-ai id="chatAi" auto-size-input="true" hide-chat-log="true" sessionid="{{ log_id }}" agent_name="{{ agent_name }}" style="margin-top: 0;"></chat-ai>
  </div>

  <script src="/mr_heygen/static/bundle.js"></script>
  <script>
        
       
    // More reliable mobile detection using User Agent and touch capability
    function isMobile() {
      // Check for touch capability
      const hasTouchScreen = (
        'ontouchstart' in window ||
        navigator.maxTouchPoints > 0 ||
        navigator.msMaxTouchPoints > 0 ||
        (window.matchMedia && window.matchMedia('(pointer: coarse)').matches)
      );
      
      // Check for mobile user agent patterns
      const userAgent = navigator.userAgent.toLowerCase();
      const mobileUserAgent = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini|mobile|tablet/i.test(userAgent);
      
      console.log("Device detection - Touch: " + hasTouchScreen + ", Mobile UA: " + mobileUserAgent);
      
      // Consider it mobile if either condition is true
      console.log("Mobile device: " + (hasTouchScreen || mobileUserAgent));
      return hasTouchScreen || mobileUserAgent;
    }

    // Function to update chat-log visibility based on screen size
    function updateChatLogVisibility() {
      const chatAi = document.getElementById('chatAi');
      if (chatAi) {
        const isMobileDevice = isMobile();
        
        // Always hide chat log regardless of device
        
        // Handle send button and input on mobile devices
        setTimeout(() => {
          console.log("-------------------------------------------")
          console.log("Mobile Device: " + isMobileDevice)
          console.log("Should be handling chat UI for device type")
          
          // Make sure chat-ai overflow is visible to prevent cutting off content
          document.querySelector('chat-ai').style.overflow = 'visible';
          
          const chatai = document.querySelector('chat-ai').shadowRoot;
          console.log({chatai});
          
          if (chatai) {
            const chatform = chatai.querySelector('chat-form')?.shadowRoot;
            console.log({chatform});

            if (chatform) {
              const sendButton = chatform.querySelector('.send_msg');
              const inputField = chatform.querySelector('#inp_message');
              console.log({sendButton});
              console.log({inputField});

              if (sendButton) {
                if (isMobileDevice) {
                  console.log("handling send button for mobile");
                  sendButton.style.display = 'none';
                } else {
                  sendButton.style.display = 'block';
                }
              }
              
              if (inputField) {
                // Allow the input field to expand naturally
                inputField.style.height = 'auto';
                inputField.style.minHeight = '25px';
                inputField.style.maxHeight = 'none';
                inputField.style.overflow = 'visible';
                
                if (isMobileDevice) {
                  console.log("handling input field for mobile");
                  inputField.disabled = true;
                  inputField.style.border = 'none';
                  
                  // Adjust container heights but don't use fixed heights that could cause overlap
                  document.querySelector('.main').style.minHeight = "100vh";
                  document.querySelector('.main').style.height = "auto";
                  document.querySelector('.main').style.justifyContent = "space-between";
                  
                  document.querySelector('article').style.maxHeight = "45vh";
                  document.querySelector('article').style.flex = "0 0 auto";
                  
                  document.querySelector('.container').style.minHeight = "auto";
                  document.querySelector('.container').style.height = "auto";
                  document.querySelector('.container').style.flex = "1 0 auto";
                  
                  document.querySelector('.load-section').style.overflow = 'visible';
                  document.querySelector('.load-section').style.marginBottom = '10px';
                }
              }
            }
          }

          if (!isMobileDevice) {
            console.log("------------------------------- not mobile device ----------------------------------");
            
            // Desktop adjustments
            document.querySelector('article').style.maxHeight = "50vh";
            document.querySelector('.container').style.minHeight = "auto";
            document.querySelector('.container').style.height = "auto";
            document.querySelector('.container').style.flex = "1 0 auto";
            
            document.querySelector('.load-section').style.overflow = 'visible';
            document.querySelector('.load-section').style.marginBottom = '10px';
            document.querySelector('#startSession').style.fontSize = '0.9rem';
            document.querySelector('#startSession').style.height = "35px";
          }
          
          // Ensure chat-ai and its children are visible
          document.querySelector('chat-ai').style.overflow = 'visible';
          document.querySelector('chat-ai').style.maxHeight = 'none';
          document.querySelector('chat-ai').style.height = 'auto';
          document.querySelector('chat-ai').style.paddingBottom = '20px';
          document.querySelector('chat-ai').style.marginBottom = '10px';
          
        }, 500); // Small delay to ensure DOM is ready
        
        // Make sure chat-ai is visible
        if (chatAi.style.display === 'none') {
          chatAi.style.display = 'block';
        }
      }
    }
    
    // Initial check
    document.addEventListener('DOMContentLoaded', updateChatLogVisibility);
    
    // Update on window resize
    window.addEventListener('resize', updateChatLogVisibility);
    
    // Additional fix for textarea visibility
    window.addEventListener('load', function() {
      setTimeout(function() {
        // Force recalculation of layout
        const chatAi = document.querySelector('chat-ai');
        if (chatAi && chatAi.shadowRoot) {
          const chatForm = chatAi.shadowRoot.querySelector('chat-form');
          if (chatForm && chatForm.shadowRoot) {
            const textarea = chatForm.shadowRoot.querySelector('#inp_message');
            if (textarea) {
              // Ensure textarea is visible and properly sized
              textarea.style.height = 'auto';
              textarea.style.minHeight = '25px';
              textarea.style.maxHeight = 'none';
              textarea.style.overflow = 'visible';
              textarea.style.display = 'block';
            }
          }
        }
      }, 1000);
    });
  </script>
{% endblock %}
